#!/usr/bin/env bash

# - The `age` key is the only file in this repository encrypted with a
#   passphrase. All other files are encrypted --and therefore must be
#   decrypted-- with the age key (once decrypted).
#
# - This script should be automatically called by `just deploy-<host>` commands
#   to automatically decrypt secret files, but can also be manually called. It
#   will first try to decrypt the age key by asking you for the passphrase,
#   then, if successful, it will try to decrypt all encrypted files in the list
#   below.

# - Include any age encrypted files in this list.
#   Each file path must be quoted.
#   Each file path must be relative to home.
encrypted_files=(".ssh/id_ed25519.age")

# - Location of the age key
encrypted_key="$HOME/.config/age/key.txt.age"

# - Exit if anything fails
set -euo pipefail

# - Decrypt age key with passphrase
key_output="${encrypted_key%.age}"
if [[ -f "$key_output" ]]; then
  echo "Age key already in place."
elif [[ ! -f "$encrypted_key" ]]; then
  echo "Encrypted age key not found. Secret files will remain encrypted."
  exit 1
else
  if age --decrypt -o "$key_output" "$encrypted_key" >/dev/null 2>&1; then
    chmod 600 "$key_output"
    echo "Successfully decrypted \"$(basename $encrypted_key)\"."
  else
    echo "Incorrect passphrase. Try again with 'age-decrypt-secrets'."
    exit 1
  fi
fi

# - Decrypt age encrypted files
for file in "${encrypted_files[@]}"; do
  file_input="$HOME/$file"
  file_output="${file_input%.age}"
  if [[ ! -f "$file_input" ]]; then
    echo "Secret file not found: $(basename $file_input)"
  else
    # Overwrite the file if it already exist
    if age --decrypt -i "$key_output" -o "$file_output" "$file_input" >/dev/null 2>&1; then
      chmod 600 "$file_output"
      echo "Successfully decrypted: $(basename $file_input)"
    else
      echo "Could not decrypt: $(basename $file_input)"
    fi
  fi
done
